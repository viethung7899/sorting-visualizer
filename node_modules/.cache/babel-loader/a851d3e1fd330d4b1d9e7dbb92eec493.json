{"ast":null,"code":"import _objectSpread from\"/Users/nguyenviethung/Desktop/GitHub/sorting-visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";// Import algorithms\nimport bubbleSort from'../sortingAlgorithms/bubbleSort';import insertionSort from'../sortingAlgorithms/insertionSort';import mergeSort from'../sortingAlgorithms/mergeSort';import quickSort from'../sortingAlgorithms/quickSort';import selectionSort from'../sortingAlgorithms/selectionSort';import heapSort from'../sortingAlgorithms/heapSort';var initState={running:false,algorithm:null,size:0,data:[],colors:[],speed:0};var color={UNSELECTED:'gray',SELECTED:'red',SORTED:'green',PIVOT:'yellow'};var rootReducer=function rootReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case'SWITCH':return _objectSpread({},state,{running:!state.running});case'CHANGE_ALGORITHM':return _objectSpread({},state,{algorithm:getAlgorithmFromId(action.algorithm)});case'GENERATE':return _objectSpread({},state,{size:action.size,data:generateArray(action.size),colors:generateColorArray(action.size),speed:map(action.size,50,250,20,1)});case'SELECT':return _objectSpread({},state,{colors:change(state.colors,action.index,color.SELECTED)});case'DESELECT':return _objectSpread({},state,{colors:change(state.colors,action.index,color.UNSELECTED)});case'MARK_SORTED':return _objectSpread({},state,{colors:change(state.colors,action.index,color.SORTED)});case'PICK':return _objectSpread({},state,{colors:change(state.colors,action.index,color.PIVOT)});default:{return state;}}};function generateArray(size){var arr=[];for(var i=0;i<size;i++){arr.push(getRandomIntInclusive(50,600));}return arr;}function generateColorArray(size){var arr=[];for(var i=0;i<size;i++){arr.push(color.UNSELECTED);}return arr;}function getRandomIntInclusive(min,max){min=Math.ceil(min);max=Math.floor(max);return Math.floor(Math.random()*(max-min+1))+min;//The maximum is inclusive and the minimum is inclusive \n}function change(colors,index,color){var newColors=colors.slice();newColors[index]=color;return newColors;}function map(value,x1,x2,y1,y2){return y1+(y2-y1)/(x2-x1)*(value-x1);}function getAlgorithmFromId(algorithm){switch(algorithm){case'bubble-sort':return bubbleSort;case'insertion-sort':return insertionSort;case'merge-sort':return mergeSort;case'quick-sort':return quickSort;case'selection-sort':return selectionSort;case'heap-sort':return heapSort;default:return null;}}export default rootReducer;","map":{"version":3,"sources":["/Users/nguyenviethung/Desktop/GitHub/sorting-visualizer/src/reducers/rootReducer.js"],"names":["bubbleSort","insertionSort","mergeSort","quickSort","selectionSort","heapSort","initState","running","algorithm","size","data","colors","speed","color","UNSELECTED","SELECTED","SORTED","PIVOT","rootReducer","state","action","type","getAlgorithmFromId","generateArray","generateColorArray","map","change","index","arr","i","push","getRandomIntInclusive","min","max","Math","ceil","floor","random","newColors","slice","value","x1","x2","y1","y2"],"mappings":"6KAAA;AACA,MAAOA,CAAAA,UAAP,KAAuB,iCAAvB,CACA,MAAOC,CAAAA,aAAP,KAA0B,oCAA1B,CACA,MAAOC,CAAAA,SAAP,KAAsB,gCAAtB,CACA,MAAOC,CAAAA,SAAP,KAAsB,gCAAtB,CACA,MAAOC,CAAAA,aAAP,KAA0B,oCAA1B,CACA,MAAOC,CAAAA,QAAP,KAAqB,+BAArB,CAEA,GAAMC,CAAAA,SAAS,CAAG,CACdC,OAAO,CAAE,KADK,CAEdC,SAAS,CAAE,IAFG,CAGdC,IAAI,CAAE,CAHQ,CAIdC,IAAI,CAAE,EAJQ,CAKdC,MAAM,CAAE,EALM,CAMdC,KAAK,CAAE,CANO,CAAlB,CASA,GAAMC,CAAAA,KAAK,CAAG,CACVC,UAAU,CAAE,MADF,CAEVC,QAAQ,CAAE,KAFA,CAGVC,MAAM,CAAE,OAHE,CAIVC,KAAK,CAAE,QAJG,CAAd,CAOA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAA+B,IAA9BC,CAAAA,KAA8B,2DAAtBb,SAAsB,IAAXc,CAAAA,MAAW,2CAC/C,OAAOA,MAAM,CAACC,IAAd,EACI,IAAK,QAAL,CACI,wBACOF,KADP,EAEIZ,OAAO,CAAE,CAACY,KAAK,CAACZ,OAFpB,GAIJ,IAAK,kBAAL,CACI,wBACOY,KADP,EAEIX,SAAS,CAAEc,kBAAkB,CAACF,MAAM,CAACZ,SAAR,CAFjC,GAIJ,IAAK,UAAL,CACI,wBACOW,KADP,EAEIV,IAAI,CAAEW,MAAM,CAACX,IAFjB,CAGIC,IAAI,CAAEa,aAAa,CAACH,MAAM,CAACX,IAAR,CAHvB,CAIIE,MAAM,CAAEa,kBAAkB,CAACJ,MAAM,CAACX,IAAR,CAJ9B,CAKIG,KAAK,CAAEa,GAAG,CAACL,MAAM,CAACX,IAAR,CAAc,EAAd,CAAkB,GAAlB,CAAuB,EAAvB,CAA2B,CAA3B,CALd,GAOJ,IAAK,QAAL,CACI,wBACOU,KADP,EAEIR,MAAM,CAAEe,MAAM,CAACP,KAAK,CAACR,MAAP,CAAeS,MAAM,CAACO,KAAtB,CAA6Bd,KAAK,CAACE,QAAnC,CAFlB,GAIJ,IAAK,UAAL,CACI,wBACOI,KADP,EAEIR,MAAM,CAAEe,MAAM,CAACP,KAAK,CAACR,MAAP,CAAeS,MAAM,CAACO,KAAtB,CAA6Bd,KAAK,CAACC,UAAnC,CAFlB,GAIJ,IAAK,aAAL,CACI,wBACOK,KADP,EAEIR,MAAM,CAAEe,MAAM,CAACP,KAAK,CAACR,MAAP,CAAeS,MAAM,CAACO,KAAtB,CAA6Bd,KAAK,CAACG,MAAnC,CAFlB,GAIJ,IAAK,MAAL,CACI,wBACOG,KADP,EAEIR,MAAM,CAAEe,MAAM,CAACP,KAAK,CAACR,MAAP,CAAeS,MAAM,CAACO,KAAtB,CAA6Bd,KAAK,CAACI,KAAnC,CAFlB,GAIJ,QAAS,CACL,MAAOE,CAAAA,KAAP,CACH,CAzCL,CA2CH,CA5CD,CA8CA,QAASI,CAAAA,aAAT,CAAuBd,IAAvB,CAA6B,CACzB,GAAImB,CAAAA,GAAG,CAAG,EAAV,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGpB,IAApB,CAA0BoB,CAAC,EAA3B,CAAgC,CAC5BD,GAAG,CAACE,IAAJ,CAASC,qBAAqB,CAAC,EAAD,CAAK,GAAL,CAA9B,EACH,CACD,MAAOH,CAAAA,GAAP,CACH,CAED,QAASJ,CAAAA,kBAAT,CAA4Bf,IAA5B,CAAkC,CAC9B,GAAImB,CAAAA,GAAG,CAAG,EAAV,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGpB,IAApB,CAA0BoB,CAAC,EAA3B,CAAgC,CAC5BD,GAAG,CAACE,IAAJ,CAASjB,KAAK,CAACC,UAAf,EACH,CACD,MAAOc,CAAAA,GAAP,CACH,CAED,QAASG,CAAAA,qBAAT,CAA+BC,GAA/B,CAAoCC,GAApC,CAAyC,CACrCD,GAAG,CAAGE,IAAI,CAACC,IAAL,CAAUH,GAAV,CAAN,CACAC,GAAG,CAAGC,IAAI,CAACE,KAAL,CAAWH,GAAX,CAAN,CACA,MAAOC,CAAAA,IAAI,CAACE,KAAL,CAAWF,IAAI,CAACG,MAAL,IAAiBJ,GAAG,CAAGD,GAAN,CAAY,CAA7B,CAAX,EAA8CA,GAArD,CAA0D;AAC7D,CAED,QAASN,CAAAA,MAAT,CAAgBf,MAAhB,CAAwBgB,KAAxB,CAA+Bd,KAA/B,CAAsC,CAClC,GAAMyB,CAAAA,SAAS,CAAG3B,MAAM,CAAC4B,KAAP,EAAlB,CACAD,SAAS,CAACX,KAAD,CAAT,CAAmBd,KAAnB,CACA,MAAOyB,CAAAA,SAAP,CACH,CAED,QAASb,CAAAA,GAAT,CAAae,KAAb,CAAoBC,EAApB,CAAwBC,EAAxB,CAA4BC,EAA5B,CAAgCC,EAAhC,CAAoC,CAChC,MAAOD,CAAAA,EAAE,CAAG,CAACC,EAAE,CAAGD,EAAN,GAAaD,EAAE,CAAGD,EAAlB,GAAyBD,KAAK,CAAGC,EAAjC,CAAZ,CACH,CAED,QAASnB,CAAAA,kBAAT,CAA4Bd,SAA5B,CAAuC,CACnC,OAAOA,SAAP,EACI,IAAK,aAAL,CACI,MAAOR,CAAAA,UAAP,CACJ,IAAK,gBAAL,CACI,MAAOC,CAAAA,aAAP,CACJ,IAAK,YAAL,CACI,MAAOC,CAAAA,SAAP,CACJ,IAAK,YAAL,CACI,MAAOC,CAAAA,SAAP,CACJ,IAAK,gBAAL,CACI,MAAOC,CAAAA,aAAP,CACJ,IAAK,WAAL,CACI,MAAOC,CAAAA,QAAP,CACJ,QACI,MAAO,KAAP,CAdR,CAgBH,CAED,cAAea,CAAAA,WAAf","sourcesContent":["// Import algorithms\nimport bubbleSort from '../sortingAlgorithms/bubbleSort';\nimport insertionSort from '../sortingAlgorithms/insertionSort';\nimport mergeSort from '../sortingAlgorithms/mergeSort';\nimport quickSort from '../sortingAlgorithms/quickSort';\nimport selectionSort from '../sortingAlgorithms/selectionSort';\nimport heapSort from '../sortingAlgorithms/heapSort';\n\nconst initState = {\n    running: false,\n    algorithm: null,\n    size: 0,\n    data: [],\n    colors: [],\n    speed: 0\n}\n\nconst color = {\n    UNSELECTED: 'gray',\n    SELECTED: 'red',\n    SORTED: 'green',\n    PIVOT: 'yellow'\n}\n\nconst rootReducer = (state = initState, action) => {\n    switch(action.type) {\n        case 'SWITCH':\n            return {\n                ...state,\n                running: !state.running\n            }\n        case 'CHANGE_ALGORITHM':\n            return {\n                ...state,\n                algorithm: getAlgorithmFromId(action.algorithm)\n            }\n        case 'GENERATE':\n            return {\n                ...state,\n                size: action.size,\n                data: generateArray(action.size),\n                colors: generateColorArray(action.size),\n                speed: map(action.size, 50, 250, 20, 1)\n            }\n        case 'SELECT':\n            return {\n                ...state,\n                colors: change(state.colors, action.index, color.SELECTED)\n            }\n        case 'DESELECT':\n            return {\n                ...state,\n                colors: change(state.colors, action.index, color.UNSELECTED)\n            }\n        case 'MARK_SORTED':\n            return {\n                ...state,\n                colors: change(state.colors, action.index, color.SORTED)\n            }\n        case 'PICK':\n            return {\n                ...state,\n                colors: change(state.colors, action.index, color.PIVOT)\n            }\n        default: {\n            return state;\n        }\n    }\n}\n\nfunction generateArray(size) {\n    let arr = [];\n    for (let i = 0; i < size; i++)  {\n        arr.push(getRandomIntInclusive(50, 600));\n    }\n    return arr;\n}\n\nfunction generateColorArray(size) {\n    let arr = [];\n    for (let i = 0; i < size; i++)  {\n        arr.push(color.UNSELECTED);\n    }\n    return arr;\n}\n\nfunction getRandomIntInclusive(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min; //The maximum is inclusive and the minimum is inclusive \n}\n\nfunction change(colors, index, color) {\n    const newColors = colors.slice();\n    newColors[index] = color;\n    return newColors;\n}\n\nfunction map(value, x1, x2, y1, y2) {\n    return y1 + (y2 - y1) / (x2 - x1) * (value - x1);\n}\n\nfunction getAlgorithmFromId(algorithm) {\n    switch(algorithm) {\n        case 'bubble-sort':\n            return bubbleSort;\n        case 'insertion-sort':\n            return insertionSort;\n        case 'merge-sort':\n            return mergeSort;\n        case 'quick-sort':\n            return quickSort;\n        case 'selection-sort':\n            return selectionSort;\n        case 'heap-sort':\n            return heapSort;\n        default:\n            return null;\n    }\n}\n\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}