{"ast":null,"code":"import _classCallCheck from\"/Users/nguyenviethung/Desktop/GitHub/sorting-visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/nguyenviethung/Desktop/GitHub/sorting-visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/nguyenviethung/Desktop/GitHub/sorting-visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/nguyenviethung/Desktop/GitHub/sorting-visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import'./NavigationBar.css';import{connect}from'react-redux';// Import actions\nimport{changeAlgorithm as _changeAlgorithm,generateData as _generateData}from'../actions/buttonActions';import _switchSort from'../actions/switchSort';import{select as _select,deselect as _deselect,markSorted as _markSorted,pick as _pick}from'../actions/manipulateArray';var NavigationBar=/*#__PURE__*/function(_React$Component){_inherits(NavigationBar,_React$Component);var _super=_createSuper(NavigationBar);function NavigationBar(){_classCallCheck(this,NavigationBar);return _super.apply(this,arguments);}_createClass(NavigationBar,[{key:\"handleClickOnMenu\",value:function handleClickOnMenu(e){var target=e.target;if(target.nodeName==='SPAN'){target=target.parentElement;}if(!this.props.isRunning){if(target.id==='sort'){this.handleSortButton(target);}else if(target.className==='dropdown-item'){this.handleClickOnDropdownMenu(target);}else if(target.id==='generate-array'){this.props.generateData(this.props.size);}}else{console.log('Still running...');}}},{key:\"handleClickOnDropdownMenu\",value:function handleClickOnDropdownMenu(target){var algorithm=target.id;var algoInText=target.textContent;target.parentElement.parentElement.childNodes[0].textContent=algoInText;this.props.changeAlgorithm(algorithm);}},{key:\"handleSortButton\",value:function handleSortButton(target){if(this.props.algorithm!==null){this.props.switchSort();var sort=this.props.algorithm;sort(this.props,this.props.speed);}else{console.log('No algorithm selected');}}},{key:\"handleSlider\",value:function handleSlider(e){if(!this.props.isRunning){var size=e.target.value;this.props.generateData(size);}}},{key:\"render\",value:function render(){var _this=this;return/*#__PURE__*/React.createElement(\"nav\",{className:\"nav-bar\"},/*#__PURE__*/React.createElement(\"div\",{className:\"title\"},/*#__PURE__*/React.createElement(\"h2\",null,\"Sorting Visualizer\")),/*#__PURE__*/React.createElement(\"ul\",{className:\"nav-list\",onClick:function onClick(e){return _this.handleClickOnMenu(e);}},/*#__PURE__*/React.createElement(NavItem,{title:\"Generate Array\"}),/*#__PURE__*/React.createElement(NavItem,{title:\"Change Size and Speed\"},/*#__PURE__*/React.createElement(\"div\",{className:\"slider-container\"},/*#__PURE__*/React.createElement(\"input\",{type:\"range\",min:\"50\",max:\"250\",step:\"1\",className:\"slider\",onChange:function onChange(e){return _this.handleSlider(e);}}))),/*#__PURE__*/React.createElement(NavItem,{title:\"Sorting Algorithm\"},/*#__PURE__*/React.createElement(\"ul\",{className:\"dropdown-menu\"},/*#__PURE__*/React.createElement(DropDownItem,{title:\"Bubble Sort\"}),/*#__PURE__*/React.createElement(DropDownItem,{title:\"Insertion Sort\"}),/*#__PURE__*/React.createElement(DropDownItem,{title:\"Selection Sort\"}),/*#__PURE__*/React.createElement(DropDownItem,{title:\"Quick Sort\"}),/*#__PURE__*/React.createElement(DropDownItem,{title:\"Merge Sort\"}),/*#__PURE__*/React.createElement(DropDownItem,{title:\"Heap Sort\"}))),/*#__PURE__*/React.createElement(NavItem,{title:\"Sort\"})));}}]);return NavigationBar;}(React.Component);function NavItem(props){var title=props.title;var id=title.toLowerCase().split(' ').join('-');return/*#__PURE__*/React.createElement(\"li\",{className:\"nav-item\",id:id},/*#__PURE__*/React.createElement(\"span\",null,title),props.children);}function DropDownItem(_ref){var title=_ref.title;var id=title.toLowerCase().split(' ').join('-');return/*#__PURE__*/React.createElement(\"li\",{class:\"dropdown-item\",id:id},title);}function mapStateToProps(state){return{isRunning:state.running,algorithm:state.algorithm,data:state.data,size:state.size,colors:state.colors,speed:state.speed};}function mapDispatchToProps(dispatch){return{switchSort:function switchSort(){return dispatch(_switchSort());},changeAlgorithm:function changeAlgorithm(algorithm){return dispatch(_changeAlgorithm(algorithm));},generateData:function generateData(size){return dispatch(_generateData(size));},select:function select(index){return dispatch(_select(index));},deselect:function deselect(index){return dispatch(_deselect(index));},markSorted:function markSorted(index){return dispatch(_markSorted(index));},pick:function pick(index){return dispatch(_pick(index));}};}export default connect(mapStateToProps,mapDispatchToProps)(NavigationBar);","map":{"version":3,"sources":["/Users/nguyenviethung/Desktop/GitHub/sorting-visualizer/src/NavigationBar/NavigationBar.js"],"names":["React","connect","changeAlgorithm","generateData","switchSort","select","deselect","markSorted","pick","NavigationBar","e","target","nodeName","parentElement","props","isRunning","id","handleSortButton","className","handleClickOnDropdownMenu","size","console","log","algorithm","algoInText","textContent","childNodes","sort","speed","value","handleClickOnMenu","handleSlider","Component","NavItem","title","toLowerCase","split","join","children","DropDownItem","mapStateToProps","state","running","data","colors","mapDispatchToProps","dispatch","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './NavigationBar.css';\nimport { connect } from 'react-redux';\n\n// Import actions\nimport {changeAlgorithm, generateData } from '../actions/buttonActions'\nimport switchSort from '../actions/switchSort'\nimport {select, deselect, markSorted, pick} from '../actions/manipulateArray'\n\nclass NavigationBar extends React.Component {\n    handleClickOnMenu(e) {\n        let target = e.target;\n        if (target.nodeName === 'SPAN') {\n            target = target.parentElement;\n        }\n        if (!this.props.isRunning) {\n            if (target.id === 'sort') {\n                this.handleSortButton(target);\n            } else if (target.className === 'dropdown-item') {\n                this.handleClickOnDropdownMenu(target);\n            } else if (target.id === 'generate-array') {\n                this.props.generateData(this.props.size);\n            }\n        } else {\n            console.log('Still running...');\n        }\n    }\n\n    handleClickOnDropdownMenu(target) {\n        let algorithm = target.id;\n        let algoInText = target.textContent;\n        target.parentElement.parentElement.childNodes[0].textContent = algoInText;\n        this.props.changeAlgorithm(algorithm);\n    }\n\n    handleSortButton(target) {\n        if (this.props.algorithm !== null) {\n            this.props.switchSort();\n            const sort = this.props.algorithm;\n            sort(this.props, this.props.speed);\n        } else {\n            console.log('No algorithm selected');\n        }\n    }\n\n    handleSlider(e) {\n        if (!this.props.isRunning) {\n            const size = e.target.value;\n            this.props.generateData(size);\n        }\n    }\n\n    render() {\n        return (\n            <nav className='nav-bar'>\n                <div className='title'><h2>Sorting Visualizer</h2></div>\n                <ul className='nav-list' onClick={e => this.handleClickOnMenu(e)}>\n                    <NavItem title='Generate Array'/>\n                    <NavItem title='Change Size and Speed'>\n                    <div className='slider-container'>\n                        <input type='range' \n                            min='50' \n                            max='250' \n                            step='1' \n                            className='slider' \n                            onChange={e => this.handleSlider(e)}/>\n                    </div>\n                    </NavItem>\n                    <NavItem title='Sorting Algorithm'>\n                        <ul className='dropdown-menu'>\n                            <DropDownItem title='Bubble Sort'/>\n                            <DropDownItem title='Insertion Sort' />\n                            <DropDownItem title='Selection Sort'/>\n                            <DropDownItem title='Quick Sort' />\n                            <DropDownItem title='Merge Sort' />\n                            <DropDownItem title='Heap Sort' />\n                        </ul>\n                    </NavItem>\n                    <NavItem title='Sort'/>\n                </ul>\n            </nav>\n        );\n    }\n}\n\nfunction NavItem(props) {\n    let title = props.title;\n    let id = title.toLowerCase().split(' ').join('-');\n    return (\n        <li className='nav-item' id={id}>\n            <span>{title}</span>\n            {props.children}\n        </li>);\n}\n\nfunction DropDownItem({title}) {\n    let id = title.toLowerCase().split(' ').join('-');\n    return (\n    <li class='dropdown-item' id={id}>{title}</li>\n    )\n}\n\nfunction mapStateToProps(state) {\n    return {\n        isRunning: state.running,\n        algorithm: state.algorithm,\n        data: state.data,\n        size: state.size,\n        colors: state.colors,\n        speed: state.speed\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        switchSort: () => dispatch(switchSort()),\n        changeAlgorithm: algorithm => dispatch(changeAlgorithm(algorithm)),\n        generateData: size => dispatch(generateData(size)),\n        select: (index) => dispatch(select(index)),\n        deselect: (index) => dispatch(deselect(index)),\n        markSorted: (index) => dispatch(markSorted(index)),\n        pick: (index) => dispatch(pick(index))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavigationBar);"]},"metadata":{},"sourceType":"module"}