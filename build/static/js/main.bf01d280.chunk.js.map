{"version":3,"sources":["actions/buttonActions.js","SortingVisualizer/SortingVisualizer.js","actions/switchSort.js","NavigationBar/NavigationBar.js","actions/manipulateArray.js","App.js","sortingAlgorithms/generalFunctions.js","sortingAlgorithms/bubbleSort.js","sortingAlgorithms/insertionSort.js","sortingAlgorithms/mergeSort.js","sortingAlgorithms/quickSort.js","sortingAlgorithms/selectionSort.js","sortingAlgorithms/heapSort.js","reducers/rootReducer.js","index.js"],"names":["generateData","size","type","SortingVisualizer","this","props","barList","data","map","value","index","Bar","color","colors","className","onChange","sort","React","Component","key","style","backgroundColor","height","connect","state","isRunning","running","algorithm","dispatch","switchSort","NavigationBar","e","target","nodeName","parentElement","console","log","id","handleSortButton","handleClickOnDropdownMenu","algoInText","textContent","childNodes","changeAlgorithm","speed","onClick","handleClickOnMenu","NavItem","title","min","max","step","handleSlider","DropDownItem","toLowerCase","split","join","children","class","select","deselect","markSorted","pick","App","sleep","ms","Promise","resolve","setTimeout","a","i","length","j","swap","arr","temp","bubbleSort","insertionSort","auxData","splice","mergeSortHelper","low","high","mid","Math","floor","copyDatatoAuxData","merge","k","index1","index2","mergeSort","quickSortHelper","parition","p","pickPivot","pivot","minIndex","quickSort","selectionSort","bubbleDown","last","maxIndex","heapSort","initState","generateArray","push","getRandomIntInclusive","generateColorArray","ceil","random","change","newColors","slice","x1","x2","y1","y2","getAlgorithmFromId","rootReducer","action","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bf01d280.chunk.js","sourcesContent":["export function changeAlgorithm(algorithm) {\n    return {\n        type: 'CHANGE_ALGORITHM',\n        algorithm: algorithm\n    }\n}\n\nexport function generateData(size) {\n    return {\n        type: 'GENERATE',\n        size: size\n    }\n}","import React from 'react'\nimport './SortingVisualizer.css'\n\nimport {connect} from 'react-redux'\n\n// Import actions\nimport {generateData} from '../actions/buttonActions'\n\nclass SortingVisualizer extends React.Component {\n    componentDidMount() {\n        this.props.generateData(100);\n    }\n\n    render() {\n        let barList = this.props.data.map((value, index) => {\n            return <Bar value={value} index={index} color={this.props.colors[index]} />\n        })\n        return (\n            <div className='visualizer' onChange={this.sort}>\n                {barList}\n            </div>\n        );\n    }\n}\n\nfunction Bar(props) {\n    let {value, index, color} = props\n    return (\n        <div \n            className='array-bar'\n            key = {index}\n            style = {{\n                backgroundColor: color,\n                height: `${value}px`\n            }}>\n        </div>\n    );\n}\n\nfunction mapStateToProps(state) {\n    return {\n        isRunning: state.running,\n        data: state.data,\n        colors: state.colors,\n        algorithm: state.algorithm\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        generateData: size => dispatch(generateData(size))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SortingVisualizer);","function switchSort() {\n    return {\n        type: 'SWITCH',\n    }\n}\n\nexport default switchSort;","import React from 'react';\nimport './NavigationBar.css';\nimport { connect } from 'react-redux';\n\n// Import actions\nimport {changeAlgorithm, generateData } from '../actions/buttonActions'\nimport switchSort from '../actions/switchSort'\nimport {select, deselect, markSorted, pick} from '../actions/manipulateArray'\n\nclass NavigationBar extends React.Component {\n    handleClickOnMenu(e) {\n        let target = e.target;\n        if (target.nodeName === 'SPAN') {\n            target = target.parentElement;\n        }\n        if (!this.props.isRunning) {\n            if (target.id === 'sort') {\n                this.handleSortButton(target);\n            } else if (target.className === 'dropdown-item') {\n                this.handleClickOnDropdownMenu(target);\n            } else if (target.id === 'generate-array') {\n                this.props.generateData(this.props.size);\n            }\n        } else {\n            console.log('Still running...');\n        }\n    }\n\n    handleClickOnDropdownMenu(target) {\n        let algorithm = target.id;\n        let algoInText = target.textContent;\n        target.parentElement.parentElement.childNodes[0].textContent = algoInText;\n        this.props.changeAlgorithm(algorithm);\n    }\n\n    handleSortButton(target) {\n        if (this.props.algorithm !== null) {\n            this.props.switchSort();\n            const sort = this.props.algorithm;\n            sort(this.props, this.props.speed);\n        } else {\n            console.log('No algorithm selected');\n        }\n    }\n\n    handleSlider(e) {\n        if (!this.props.isRunning) {\n            const size = e.target.value;\n            this.props.generateData(size);\n        }\n    }\n\n    render() {\n        return (\n            <nav className='nav-bar'>\n                <div className='title'><h2>Sorting Visualizer</h2></div>\n                <ul className='nav-list' onClick={e => this.handleClickOnMenu(e)}>\n                    <NavItem title='Generate Array'/>\n                    <NavItem title='Change Size and Speed'>\n                    <div className='slider-container'>\n                        <input type='range' \n                            min='50' \n                            max='250' \n                            step='1' \n                            className='slider' \n                            onChange={e => this.handleSlider(e)}/>\n                    </div>\n                    </NavItem>\n                    <NavItem title='Sorting Algorithm'>\n                        <ul className='dropdown-menu'>\n                            <DropDownItem title='Bubble Sort'/>\n                            <DropDownItem title='Insertion Sort' />\n                            <DropDownItem title='Selection Sort'/>\n                            <DropDownItem title='Quick Sort' />\n                            <DropDownItem title='Merge Sort' />\n                            <DropDownItem title='Heap Sort' />\n                        </ul>\n                    </NavItem>\n                    <NavItem title='Sort'/>\n                </ul>\n            </nav>\n        );\n    }\n}\n\nfunction NavItem(props) {\n    let title = props.title;\n    let id = title.toLowerCase().split(' ').join('-');\n    return (\n        <li className='nav-item' id={id}>\n            <span>{title}</span>\n            {props.children}\n        </li>);\n}\n\nfunction DropDownItem({title}) {\n    let id = title.toLowerCase().split(' ').join('-');\n    return (\n    <li class='dropdown-item' id={id}>{title}</li>\n    )\n}\n\nfunction mapStateToProps(state) {\n    return {\n        isRunning: state.running,\n        algorithm: state.algorithm,\n        data: state.data,\n        size: state.size,\n        colors: state.colors,\n        speed: state.speed\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        switchSort: () => dispatch(switchSort()),\n        changeAlgorithm: algorithm => dispatch(changeAlgorithm(algorithm)),\n        generateData: size => dispatch(generateData(size)),\n        select: (index) => dispatch(select(index)),\n        deselect: (index) => dispatch(deselect(index)),\n        markSorted: (index) => dispatch(markSorted(index)),\n        pick: (index) => dispatch(pick(index))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavigationBar);","export function select(index) {\n    return {\n        type: 'SELECT',\n        index: index\n    }\n}\n\nexport function deselect(index) {\n    return {\n        type: 'DESELECT',\n        index: index\n    }\n}\n\nexport function markSorted(index) {\n    return {\n        type: 'MARK_SORTED',\n        index: index\n    }\n}\n\nexport function pick(index) {\n    return {\n        type: 'PICK',\n        index: index\n    }\n}","import React from 'react';\nimport SortingVisualizer from './SortingVisualizer/SortingVisualizer'\nimport NavigationBar from './NavigationBar/NavigationBar'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavigationBar />\n      <SortingVisualizer />\n    </div>\n  );\n}\n\nexport default App;\n","export function sleep(ms) {\n    return new Promise(\n        resolve => setTimeout(resolve, ms)\n    );\n}","import {sleep} from './generalFunctions';\n\nasync function bubbleSort(props, speed) {\n    const data = props.data;\n    for (let i = 0; i < data.length - 1; i++) {\n        for (let j = 0; j < data.length - i - 1; j++) {\n            props.select(j); props.select(j+1);\n            await sleep(speed)\n            if (data[j] > data[j+1]) {\n                swap(data, j, j+1);\n            }\n            props.deselect(j);\n            props.deselect(j+1);\n        }\n        props.markSorted(data.length - i - 1);\n    }\n    props.markSorted(0);\n    props.switchSort();\n}\n\nfunction swap(arr, i, j) {\n    const temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n}\n\nexport default bubbleSort;","import {sleep} from './generalFunctions';\n\nasync function insertionSort(props, speed) {\n    const data = props.data;\n    for (let i = 1; i < data.length; i++) {\n        for (let j = i; j > 0 && data[j-1] > data[j]; j--) {\n            props.select(j);\n            await sleep(speed);\n            swap(data, j-1, j);\n            props.deselect(j);\n        }\n    }\n\n    for (let i = 0; i < data.length; i++) {\n        props.markSorted(i);\n        await sleep(speed);\n    }\n    props.switchSort();\n}\n\nfunction swap(arr, i, j) {\n    const temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n}\n\nexport default insertionSort;","import {sleep} from './generalFunctions';\n\nasync function mergeSort(props, speed) {\n    const auxData = props.data.splice();\n    await mergeSortHelper(props, auxData, 0, props.data.length - 1, speed);\n    for (let i = 0; i < props.data.length; i++) {\n        props.markSorted(i);\n        await sleep(speed);\n    }\n    props.switchSort();\n}\n\nasync function mergeSortHelper(props, auxData, low, high, speed) {\n    const data = props.data;\n    if (low < high) {\n        let mid = Math.floor((low + high) / 2);\n        copyDatatoAuxData(data, auxData, low, high);\n        await mergeSortHelper(props, auxData, low, mid, speed);\n        await mergeSortHelper(props, auxData, mid+1, high, speed);\n        await merge(props, auxData, low, mid, high, speed);\n        copyDatatoAuxData(data, auxData, low, high);\n    }\n}\n\nasync function merge(props, auxData, low, mid, high, speed) {\n    const data = props.data;\n    let i = low, j = mid+1, k = low;\n    while(i <= mid && j <= high) {\n        let index1 = i, index2 = j;\n        props.select(index1); props.select(index2);\n        if (auxData[i] < auxData[j]) {\n            data[k] = auxData[i];\n            i++;\n        } else {\n            data[k] = auxData[j];\n            j++;\n        }\n        k++;\n        await sleep(speed);\n        props.deselect(index1); props.deselect(index2);\n    }\n\n    while(i <= mid) {\n        props.select(i); props.select(high);\n        data[k] = auxData[i];\n        await sleep(speed);\n        props.deselect(i); props.deselect(high);\n        i++; k++;\n    }\n\n    while(j <= high) {\n        props.select(j); props.select(mid);\n        data[k] = auxData[j];\n        await sleep(speed);\n        props.deselect(j); props.deselect(mid);\n        j++; k++;\n    }\n}\n\nfunction copyDatatoAuxData(data, auxData, low, high) {\n    for (let i = low; i <= high; i++) {\n        auxData[i] = data[i];\n    }\n}\n\nexport default mergeSort;","import {sleep} from './generalFunctions';\n\nasync function quickSort(props, speed) {\n    await quickSortHelper(props, speed, 0, props.data.length - 1);\n    props.switchSort();\n}\n\nasync function quickSortHelper(props, speed, low, high) {\n    if (low < high) {\n        const p = await parition(props, speed, low, high);\n        props.markSorted(p);\n        await quickSortHelper(props, speed, low, p-1);\n        await quickSortHelper(props, speed, p+1, high);\n    } else if (low === high) {\n        props.markSorted(low);\n    }\n}\n\nasync function parition(props, speed, low, high) {\n    const data = props.data;\n    const pivot = await pickPivot(props, speed, low, high);\n    await sleep(speed);\n    let i = low;\n    for (let j = low; j < high; j++) {\n        if (data[j] < pivot) {\n            props.select(i); props.select(j);\n            await swap(data, i ,j, speed);\n            props.deselect(i); props.deselect(j);\n            i++;\n        }\n    }\n    props.pick(i);\n    await sleep(speed);\n    swap(data, i, high, speed);\n    props.deselect(high);\n    await sleep(speed);\n    return i;\n}\n\nasync function pickPivot(props, speed, low, high) {\n    const mid = Math.floor((low + high) / 2);\n    const data = props.data;\n    let minIndex = low;\n    if (data[mid] < data[minIndex]) {\n        minIndex = mid;\n    }\n    if (data[high] < data[minIndex]) {\n        minIndex = high;\n    }\n    props.pick(minIndex);\n    swap(data, minIndex, high, speed);\n    props.deselect(minIndex);\n    props.pick(high);\n    return data[high];\n}\n\nasync function swap(data, i, j, speed) {\n    const temp = data[i];\n    // Select\n    data[i] = data[j];\n    data[j] = temp;\n    await sleep(speed);\n    \n}\n\nexport default quickSort;","import {sleep} from './generalFunctions';\n\nasync function selectionSort(props, speed) {\n    const data = props.data;\n    for (let i = 0; i < data.length; i++) {\n        let min = data[i];\n        let minIndex = i;\n        props.pick(i);\n        await sleep(speed);\n        for (let j = i + 1; j < data.length; j++) {\n            props.select(j);\n            await sleep(speed);\n            // Find minimum\n            if (min > data[j]) {\n                props.deselect(minIndex);\n                props.pick(j);\n                min = data[j];\n                minIndex = j;\n                props.pick(minIndex);\n                await sleep(speed);\n            }\n            if (j !== minIndex) {\n                props.deselect(j);\n            }\n        }\n        props.deselect(minIndex);\n        swap(data, i, minIndex);\n        props.pick(i);\n        await sleep(speed);\n        props.markSorted(i);\n        await sleep(speed);\n    }\n    props.switchSort();\n}\n\nfunction swap(arr, i, j) {\n    const temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n}\n\nexport default selectionSort;","import {sleep} from './generalFunctions';\n\nasync function heapSort(props, speed) {\n    const {data, switchSort, markSorted} = props;\n    // Heapify\n    for (let index = Math.floor((data.length - 2) / 2); index >= 0; index--) {\n        await bubbleDown(props, index, data.length - 1, speed);\n    }\n    // Sort\n    for (let i = 0; i < data.length; i++) {\n        await swap(props, 0, data.length - i - 1, speed);\n        markSorted(data.length - i - 1);\n        await bubbleDown(props, 0, data.length - i - 2, speed);\n    }\n    switchSort();\n}\n\nasync function bubbleDown(props, index, last, speed) {\n    const data = props.data;\n    let maxIndex = 2*index + 1;\n    while (maxIndex <= last) {\n        if (maxIndex < last && data[maxIndex] < data[maxIndex + 1])\n            maxIndex++;\n        if (data[index] < data[maxIndex]) {\n            await swap(props, index, maxIndex, speed);\n            index = maxIndex;\n            maxIndex = 2 * index + 1;\n        } else {\n            maxIndex = last + 1;\n        }\n    }\n}\n\nasync function swap(props, i, j, speed) {\n    const {data, select, deselect} = props;\n    select(i); select(j);\n    await sleep(speed);\n    const temp = data[i];\n    data[i] = data[j];\n    data[j] = temp;\n    deselect(i); deselect(j);\n}\n\nexport default heapSort;","// Import algorithms\nimport bubbleSort from '../sortingAlgorithms/bubbleSort';\nimport insertionSort from '../sortingAlgorithms/insertionSort';\nimport mergeSort from '../sortingAlgorithms/mergeSort';\nimport quickSort from '../sortingAlgorithms/quickSort';\nimport selectionSort from '../sortingAlgorithms/selectionSort';\nimport heapSort from '../sortingAlgorithms/heapSort';\n\nconst initState = {\n    running: false,\n    algorithm: null,\n    size: 0,\n    data: [],\n    colors: [],\n    speed: 0\n}\n\nconst color = {\n    UNSELECTED: 'gray',\n    SELECTED: 'red',\n    SORTED: 'green',\n    PIVOT: 'yellow'\n}\n\nconst rootReducer = (state = initState, action) => {\n    switch(action.type) {\n        case 'SWITCH':\n            return {\n                ...state,\n                running: !state.running\n            }\n        case 'CHANGE_ALGORITHM':\n            return {\n                ...state,\n                algorithm: getAlgorithmFromId(action.algorithm)\n            }\n        case 'GENERATE':\n            return {\n                ...state,\n                size: action.size,\n                data: generateArray(action.size),\n                colors: generateColorArray(action.size),\n                speed: map(action.size, 50, 250, 20, 1)\n            }\n        case 'SELECT':\n            return {\n                ...state,\n                colors: change(state.colors, action.index, color.SELECTED)\n            }\n        case 'DESELECT':\n            return {\n                ...state,\n                colors: change(state.colors, action.index, color.UNSELECTED)\n            }\n        case 'MARK_SORTED':\n            return {\n                ...state,\n                colors: change(state.colors, action.index, color.SORTED)\n            }\n        case 'PICK':\n            return {\n                ...state,\n                colors: change(state.colors, action.index, color.PIVOT)\n            }\n        default: {\n            return state;\n        }\n    }\n}\n\nfunction generateArray(size) {\n    let arr = [];\n    for (let i = 0; i < size; i++)  {\n        arr.push(getRandomIntInclusive(50, 600));\n    }\n    return arr;\n}\n\nfunction generateColorArray(size) {\n    let arr = [];\n    for (let i = 0; i < size; i++)  {\n        arr.push(color.UNSELECTED);\n    }\n    return arr;\n}\n\nfunction getRandomIntInclusive(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min; //The maximum is inclusive and the minimum is inclusive \n}\n\nfunction change(colors, index, color) {\n    const newColors = colors.slice();\n    newColors[index] = color;\n    return newColors;\n}\n\nfunction map(value, x1, x2, y1, y2) {\n    return y1 + (y2 - y1) / (x2 - x1) * (value - x1);\n}\n\nfunction getAlgorithmFromId(algorithm) {\n    switch(algorithm) {\n        case 'bubble-sort':\n            return bubbleSort;\n        case 'insertion-sort':\n            return insertionSort;\n        case 'merge-sort':\n            return mergeSort;\n        case 'quick-sort':\n            return quickSort;\n        case 'selection-sort':\n            return selectionSort;\n        case 'heap-sort':\n            return heapSort;\n        default:\n            return null;\n    }\n}\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducers/rootReducer';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}